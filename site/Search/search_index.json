{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230 Hrbust_ACM\u2018s Wiki\uff01 \u00b6 Let\u2019s Go !!! \u00b6 \u65bd\u5de5\u8fdb\u5ea6 \u00b6 [##-----------------------------------------------------------------------------------------------] 2%","title":"Getting Started"},{"location":"#hrbust_acms-wiki","text":"","title":"\u6b22\u8fce\u6765\u5230 Hrbust_ACM\u2018s Wiki\uff01"},{"location":"#lets-go","text":"","title":"Let\u2019s Go !!!"},{"location":"#_1","text":"[##-----------------------------------------------------------------------------------------------] 2%","title":"\u65bd\u5de5\u8fdb\u5ea6"},{"location":"faq/","text":"\u4f9d\u8d56\u73af\u5883 \u00b6 \u535a\u5ba2\u6846\u67b6\u57fa\u4e8epython\uff0c \u4f7f\u7528pip\u5b89\u88c5\u76f8\u5173\u5b89\u88c5\u5305 1 2 3 4 Python 3.0 - 3.7 . x # mkdocs\u8fd8\u672a\u652f\u6301Python 3.8.0 mkdocs >= 1 # \u535a\u5ba2\u6846\u67b6 mkdocs - material # mkdocs\u4e3b\u9898 pymdown - extensions # markdown\u6269\u5c55 \u535a\u5ba2\u7ed3\u6784 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 -.git : - # git\u914d\u7f6e\u6587\u4ef6\u5939\uff0c\u52ff\u52a8 -docs : - _static - Base - Data_Structure - ... # docs\u6587\u4ef6\u5939\u5b58\u653emarkdown\u6587\u4ef6\uff0c\u65e2\u535a\u5ba2\u5185\u5bb9 -site : - xxxx.html - ... # - mkdocs build\u547d\u4ee4\u540e\u751f\u6210\u7684\u9759\u6001\u6587\u4ef6\uff0c\u7531html\u7ec4\u6210\u3002 - CNAME # DNS\u57df\u540d\u914d\u7f6e\u6587\u4ef6\uff0c\u82e5\u4e22\u5931\u4f1a\u9020\u6210\u57df\u540d\u65e0\u6cd5\u89e3\u6790 - mkdocs.yml # mkdocs\u914d\u7f6e\u6587\u4ef6\uff0c\u6587\u7ae0\u76ee\u5f55 - README.md # GitHub\u4ed3\u5e93\u4ecb\u7ecd\u6587\u4ef6 Git\u547d\u4ee4\u7b80\u4ecb \u00b6 \u9700\u8981\u5b89\u88c5git\u73af\u5883\uff0c \u4e0b\u8f7dGit \u6709\u547d\u4ee4\u884c\u548cGUI\u4e24\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff0c\u63a8\u8350\u4e24\u79cd\u7ed3\u5408\u4f7f\u7528 \u4e0b\u8f7dGitHub Desktop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 start a working area ( see also: git help tutorial ) clone Clone a repository into a new directory init Create an empty Git repository or reinitialize an existing one work on the current change ( see also: git help everyday ) add Add file contents to the index mv Move or rename a file, a directory, or a symlink restore Restore working tree files rm Remove files from the working tree and from the index examine the history and state ( see also: git help revisions ) bisect Use binary search to find the commit that introduced a bug diff Show changes between commits, commit and working tree, etc grep Print lines matching a pattern log Show commit logs show Show various types of objects status Show the working tree status grow, mark and tweak your common history branch List, create, or delete branches commit Record changes to the repository merge Join two or more development histories together rebase Reapply commits on top of another base tip reset Reset current HEAD to the specified state switch Switch branches tag Create, list, delete or verify a tag object signed with GPG collaborate ( see also: git help workflows ) fetch Download objects and refs from another repository pull Fetch from and integrate with another repository or a local branch push Update remote refs along with associated objects \u5e38\u7528\u7684\u547d\u4ee4\u53ea\u6709\u51e0\u6761\u719f\u6089\u5373\u53ef\uff0c\u6211\u4eec\u4e00\u822c\u5728GUI\u4e2d\u64cd\u4f5c git clone url git add -A git commit -m \u201c\u672c\u6b21\u63d0\u4ea4\u7684\u8bf4\u660e\u201d git push MkDocs\u547d\u4ee4 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 MkDocs - Project documentation with Markdown . Options : -V , - -version Show the version and exit . -q , - -quiet Silence warnings -v , - -verbose Enable verbose output -h , - -help Show this message and exit . Commands : build Build the MkDocs documentation gh-deploy Deploy your documentation to GitHub Pages new Create a new MkDocs project serve Run the builtin development server \u5e38\u7528\u64cd\u4f5c\u6d41\u7a0b\uff0c\u5728\u4efb\u4e00\u7ec8\u7aef\u4e0b \u8fdb\u5165wiki\u7684\u6839\u76ee\u5f55\u4f7f\u7528mkdocs serve \u542f\u52a8\u672c\u5730\u670d\u52a1\uff0c\u6b64\u65f6\u53ef\u4ee5\u5728 127.0.0.1:8000 \u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee \u672c\u5730\u6587\u4ef6\u4fee\u6539\u540e\uff0c\u65e0\u9700\u91cd\u542f\u670d\u52a1\uff0c\u4fdd\u5b58\u540e\u6d4f\u89c8\u5668\u81ea\u52a8\u5237\u65b0 \u4fee\u6539\u5b8c\u6210\u540e\u4f7f\u7528 mkdocs build \u751f\u6210\u9759\u6001\u6587\u4ef6 /site \u6587\u4ef6\u5939 \u65e0\u9700\u4f7f\u7528gh-deploy\u548cnew\u547d\u4ee4 \u53c2\u4e0e\u7f16\u5199 \u00b6 > \u6211\u662f\u840c\u65b0 \u00b6 \u53c2\u4e0eWiki\u7684\u7f16\u5199 \u9700\u8981 \u4e00\u4e2a GitHub \u8d26\u53f7\uff0c \u4e0d\u9700\u8981 \u9ad8\u8d85\u7684 GitHub \u6280\u5de7\u3002 \u7ef4\u4fee\u4e2d\u3002\u3002\u3002 > \u6211\u662f\u5927\u4f6c \u00b6 \u88ab\u8feb\u6210\u4e3a\u5927\u4f6c\uff0c\u63d0\u4ea4\u4f60\u5b9d\u8d35\u7684\u7b2c\u4e00\u6b21 PR\uff08Pull Requests\uff09 \u5427 PR\u4e94\u6b65\u8d70\u6d41\u7a0b fork\u672c\u9879\u76ee\u5230\u81ea\u5df1\u7684\u4ed3\u5e93 \u6210\u529f\u540e\uff1a\uff08\u6ce8\u610f\u8fd9\u91cc\u5df2\u7ecf\u662f\u81ea\u5df1\u7684\u4ed3\u5e93\u4e86\uff0c\u7528\u6237\u540drelifes\uff0c\u5e76\u4e14\u56fe\u6807\u53d8\u6210\u4e86\u53c9\u5b50\uff09 clone\u5230\u672c\u5730\u8fdb\u884c\u4fee\u6539\uff0c\u7531\u4e8e\u662f\u81ea\u5df1\u7684\u4ed3\u5e93\uff0c\u6240\u4ee5\u60f3\u600e\u4e48\u6539\u90fd\u884c \u8fd9\u91cc\u67094\u79cd\u65b9\u5f0f\u514b\u9686\u4e0b\u6765 git clone https://github.com/username/wiki.git git clone git@github.com:username/wiki.git \u4f7f\u7528Destop\u5ba2\u6237\u7aef\u514b\u9686 \u76f4\u63a5\u4e0b\u8f7d\u9879\u76ee\u7684\u6e90\u7801\u538b\u7f29\u5305","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"faq/#_1","text":"\u535a\u5ba2\u6846\u67b6\u57fa\u4e8epython\uff0c \u4f7f\u7528pip\u5b89\u88c5\u76f8\u5173\u5b89\u88c5\u5305 1 2 3 4 Python 3.0 - 3.7 . x # mkdocs\u8fd8\u672a\u652f\u6301Python 3.8.0 mkdocs >= 1 # \u535a\u5ba2\u6846\u67b6 mkdocs - material # mkdocs\u4e3b\u9898 pymdown - extensions # markdown\u6269\u5c55","title":"\u4f9d\u8d56\u73af\u5883"},{"location":"faq/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 -.git : - # git\u914d\u7f6e\u6587\u4ef6\u5939\uff0c\u52ff\u52a8 -docs : - _static - Base - Data_Structure - ... # docs\u6587\u4ef6\u5939\u5b58\u653emarkdown\u6587\u4ef6\uff0c\u65e2\u535a\u5ba2\u5185\u5bb9 -site : - xxxx.html - ... # - mkdocs build\u547d\u4ee4\u540e\u751f\u6210\u7684\u9759\u6001\u6587\u4ef6\uff0c\u7531html\u7ec4\u6210\u3002 - CNAME # DNS\u57df\u540d\u914d\u7f6e\u6587\u4ef6\uff0c\u82e5\u4e22\u5931\u4f1a\u9020\u6210\u57df\u540d\u65e0\u6cd5\u89e3\u6790 - mkdocs.yml # mkdocs\u914d\u7f6e\u6587\u4ef6\uff0c\u6587\u7ae0\u76ee\u5f55 - README.md # GitHub\u4ed3\u5e93\u4ecb\u7ecd\u6587\u4ef6","title":"\u535a\u5ba2\u7ed3\u6784"},{"location":"faq/#git","text":"\u9700\u8981\u5b89\u88c5git\u73af\u5883\uff0c \u4e0b\u8f7dGit \u6709\u547d\u4ee4\u884c\u548cGUI\u4e24\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff0c\u63a8\u8350\u4e24\u79cd\u7ed3\u5408\u4f7f\u7528 \u4e0b\u8f7dGitHub Desktop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 start a working area ( see also: git help tutorial ) clone Clone a repository into a new directory init Create an empty Git repository or reinitialize an existing one work on the current change ( see also: git help everyday ) add Add file contents to the index mv Move or rename a file, a directory, or a symlink restore Restore working tree files rm Remove files from the working tree and from the index examine the history and state ( see also: git help revisions ) bisect Use binary search to find the commit that introduced a bug diff Show changes between commits, commit and working tree, etc grep Print lines matching a pattern log Show commit logs show Show various types of objects status Show the working tree status grow, mark and tweak your common history branch List, create, or delete branches commit Record changes to the repository merge Join two or more development histories together rebase Reapply commits on top of another base tip reset Reset current HEAD to the specified state switch Switch branches tag Create, list, delete or verify a tag object signed with GPG collaborate ( see also: git help workflows ) fetch Download objects and refs from another repository pull Fetch from and integrate with another repository or a local branch push Update remote refs along with associated objects \u5e38\u7528\u7684\u547d\u4ee4\u53ea\u6709\u51e0\u6761\u719f\u6089\u5373\u53ef\uff0c\u6211\u4eec\u4e00\u822c\u5728GUI\u4e2d\u64cd\u4f5c git clone url git add -A git commit -m \u201c\u672c\u6b21\u63d0\u4ea4\u7684\u8bf4\u660e\u201d git push","title":"Git\u547d\u4ee4\u7b80\u4ecb"},{"location":"faq/#mkdocs","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 MkDocs - Project documentation with Markdown . Options : -V , - -version Show the version and exit . -q , - -quiet Silence warnings -v , - -verbose Enable verbose output -h , - -help Show this message and exit . Commands : build Build the MkDocs documentation gh-deploy Deploy your documentation to GitHub Pages new Create a new MkDocs project serve Run the builtin development server \u5e38\u7528\u64cd\u4f5c\u6d41\u7a0b\uff0c\u5728\u4efb\u4e00\u7ec8\u7aef\u4e0b \u8fdb\u5165wiki\u7684\u6839\u76ee\u5f55\u4f7f\u7528mkdocs serve \u542f\u52a8\u672c\u5730\u670d\u52a1\uff0c\u6b64\u65f6\u53ef\u4ee5\u5728 127.0.0.1:8000 \u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee \u672c\u5730\u6587\u4ef6\u4fee\u6539\u540e\uff0c\u65e0\u9700\u91cd\u542f\u670d\u52a1\uff0c\u4fdd\u5b58\u540e\u6d4f\u89c8\u5668\u81ea\u52a8\u5237\u65b0 \u4fee\u6539\u5b8c\u6210\u540e\u4f7f\u7528 mkdocs build \u751f\u6210\u9759\u6001\u6587\u4ef6 /site \u6587\u4ef6\u5939 \u65e0\u9700\u4f7f\u7528gh-deploy\u548cnew\u547d\u4ee4","title":"MkDocs\u547d\u4ee4"},{"location":"faq/#_3","text":"","title":"\u53c2\u4e0e\u7f16\u5199"},{"location":"faq/#_4","text":"\u53c2\u4e0eWiki\u7684\u7f16\u5199 \u9700\u8981 \u4e00\u4e2a GitHub \u8d26\u53f7\uff0c \u4e0d\u9700\u8981 \u9ad8\u8d85\u7684 GitHub \u6280\u5de7\u3002 \u7ef4\u4fee\u4e2d\u3002\u3002\u3002","title":"&gt; \u6211\u662f\u840c\u65b0"},{"location":"faq/#_5","text":"\u88ab\u8feb\u6210\u4e3a\u5927\u4f6c\uff0c\u63d0\u4ea4\u4f60\u5b9d\u8d35\u7684\u7b2c\u4e00\u6b21 PR\uff08Pull Requests\uff09 \u5427 PR\u4e94\u6b65\u8d70\u6d41\u7a0b fork\u672c\u9879\u76ee\u5230\u81ea\u5df1\u7684\u4ed3\u5e93 \u6210\u529f\u540e\uff1a\uff08\u6ce8\u610f\u8fd9\u91cc\u5df2\u7ecf\u662f\u81ea\u5df1\u7684\u4ed3\u5e93\u4e86\uff0c\u7528\u6237\u540drelifes\uff0c\u5e76\u4e14\u56fe\u6807\u53d8\u6210\u4e86\u53c9\u5b50\uff09 clone\u5230\u672c\u5730\u8fdb\u884c\u4fee\u6539\uff0c\u7531\u4e8e\u662f\u81ea\u5df1\u7684\u4ed3\u5e93\uff0c\u6240\u4ee5\u60f3\u600e\u4e48\u6539\u90fd\u884c \u8fd9\u91cc\u67094\u79cd\u65b9\u5f0f\u514b\u9686\u4e0b\u6765 git clone https://github.com/username/wiki.git git clone git@github.com:username/wiki.git \u4f7f\u7528Destop\u5ba2\u6237\u7aef\u514b\u9686 \u76f4\u63a5\u4e0b\u8f7d\u9879\u76ee\u7684\u6e90\u7801\u538b\u7f29\u5305","title":"&gt; \u6211\u662f\u5927\u4f6c"},{"location":"home/","text":"\u4e00\uff1a\u5173\u4e8e\u672c\u7ad9 \u00b6 Info \u535a\u5ba2\u6846\u67b6 : MkDocs \u4e3b\u9898 : Material for MkDocs \u7f16\u5199\u6587\u672c \uff1amarkdown \u4e8c\uff1a\u7f16\u5199\u8bf4\u660e \u00b6 \u63a8\u8350\u4f7f\u7528 Typora \u6765\u7f16\u5199markdown\u6587\u4ef6 \u535a\u5ba2\u67b6\u6784\u652f\u6301 LaTeX \u6570\u5b66\u516c\u5f0f\u548cmarkdown\u6269\u5c55 \u4f8b\u5982\u4f60\u6240\u89c1\u5230\u7684 f_{i,j,k} f_{i,j,k} , f(i,j,k) f(i,j,k) \\varnothing \\varnothing \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u4e0e\u590d\u5236 C++ 1 2 3 4 5 6 7 8 9 10 11 12 #include <bits/stdc++.h> using namespace std ; int main () { vector < int > v ; for ( int i = 1 ; i <= 10 ; i ++ ) v . push_back ( i ); for ( auto x : v ) cout << x << \" \" ; printf ( \"Hello World \\n \" ); return 0 ; } python 1 2 3 4 5 6 def blogs_with_type ( request , blog_type_pk ): context = {} blog_type = get_object_or_404 ( BlogType , pk = blog_type_pk ) context [ 'blogs' ] = Blog . objects . filter ( blog_type = blog_type ) context [ 'blog_type' ] = blog_type return render ( request , 'blogs_with_type.html' , context ) \u4e09\uff1a\u52a0\u5165\u6211\u4eec \u00b6 \u8bf7\u8054\u7cfb\u5218\u660e\u8f89\u5b66\u957f","title":"Wiki\u4ecb\u7ecd"},{"location":"home/#_1","text":"Info \u535a\u5ba2\u6846\u67b6 : MkDocs \u4e3b\u9898 : Material for MkDocs \u7f16\u5199\u6587\u672c \uff1amarkdown","title":"\u4e00\uff1a\u5173\u4e8e\u672c\u7ad9"},{"location":"home/#_2","text":"\u63a8\u8350\u4f7f\u7528 Typora \u6765\u7f16\u5199markdown\u6587\u4ef6 \u535a\u5ba2\u67b6\u6784\u652f\u6301 LaTeX \u6570\u5b66\u516c\u5f0f\u548cmarkdown\u6269\u5c55 \u4f8b\u5982\u4f60\u6240\u89c1\u5230\u7684 f_{i,j,k} f_{i,j,k} , f(i,j,k) f(i,j,k) \\varnothing \\varnothing \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u4e0e\u590d\u5236 C++ 1 2 3 4 5 6 7 8 9 10 11 12 #include <bits/stdc++.h> using namespace std ; int main () { vector < int > v ; for ( int i = 1 ; i <= 10 ; i ++ ) v . push_back ( i ); for ( auto x : v ) cout << x << \" \" ; printf ( \"Hello World \\n \" ); return 0 ; } python 1 2 3 4 5 6 def blogs_with_type ( request , blog_type_pk ): context = {} blog_type = get_object_or_404 ( BlogType , pk = blog_type_pk ) context [ 'blogs' ] = Blog . objects . filter ( blog_type = blog_type ) context [ 'blog_type' ] = blog_type return render ( request , 'blogs_with_type.html' , context )","title":"\u4e8c\uff1a\u7f16\u5199\u8bf4\u660e"},{"location":"home/#_3","text":"\u8bf7\u8054\u7cfb\u5218\u660e\u8f89\u5b66\u957f","title":"\u4e09\uff1a\u52a0\u5165\u6211\u4eec"},{"location":"markdown-model/","text":"","title":"MarkDown\u6a21\u677f"},{"location":"Base/","text":"\u5728\u6b64\u90e8\u5206\u6211\u4eec\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u5e38\u7528\u7684\u57fa\u7840\u7b97\u6cd5\u548c\u57fa\u672c\u601d\u60f3 \u6392\u5e8f\u7b97\u6cd5 \u4e8c\u5206 \u9ad8\u7cbe\u5ea6\u8ba1\u7b97 \u524d\u7f00\u548c\u4e0e\u5dee\u5206 \u53cc\u6307\u9488 \u4f4d\u8fd0\u7b97 \u79bb\u6563\u5316 \u533a\u95f4\u5408\u5e76 \u8d2a\u5fc3","title":"\u7b97\u6cd5\u57fa\u7840\u7b80\u4ecb"},{"location":"Base/\u679a\u4e3e/","text":"","title":"\u679a\u4e3e"},{"location":"Base/\u8d2a\u5fc3/","text":"","title":"\u8d2a\u5fc3"},{"location":"Base/sort/\u5f52\u5e76\u6392\u5e8f/","text":"","title":"\u5f52\u5e76\u6392\u5e8f"},{"location":"Base/sort/\u5feb\u901f\u6392\u5e8f/","text":"1. \u4efb\u52a1 \u00b6 \u5c06\u4e00\u4e2a\u4e71\u5e8f\u6570\u7ec4\u6309\u5347\u5e8f\u6392\u5e8f 2. \u63a5\u53e3 \u00b6 void quick_sort(int q[], int l, int r) \u65f6\u95f4\u590d\u6742\u5ea6\uff1a O( N \\log N) O( N \\log N) q[] ....\u8981\u6392\u5e8f\u7684\u6570\u7ec4 l ......\u6392\u5e8f\u7684\u5de6\u533a\u95f4\u7aef\u70b9 r ......\u6392\u5e8f\u7684\u53f3\u533a\u95f4\u7aef\u70b9 3. \u4ee3\u7801 \u00b6 1 2 3 4 5 6 7 8 9 10 11 void quick_sort ( int q [], int l , int r ) { if ( l >= r ) return ; int x = q [ l + r >> 1 ], i = l - 1 , j = r + 1 ; while ( i < j ){ while ( q [ ++ i ] < x ); while ( q [ -- j ] > x ); if ( i < j ) swap ( q [ i ], q [ j ]); } quick_sort ( q , l , j ); quick_sort ( q , j + 1 , r ); } 4. \u4f7f\u7528\u8303\u4f8b \u00b6 AcWing 785. \u5feb\u901f\u6392\u5e8f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std ; const int N = 100000 ; int q [ N ]; void quick_sort ( int q [], int l , int r ) { if ( l >= r ) return ; int x = q [ l + r >> 1 ], i = l - 1 , j = r + 1 ; while ( i < j ){ while ( q [ ++ i ] < x ); while ( q [ -- j ] > x ); if ( i < j ) swap ( q [ i ], q [ j ]); } quick_sort ( q , l , j ); quick_sort ( q , j + 1 , r ); } int main () { int n ; scanf ( \"%d\" , & n ); for ( int i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & q [ i ]); quick_sort ( q , 0 , n - 1 ); for ( int i = 0 ; i < n ; i ++ ) printf ( \"%d \" , q [ i ]); return 0 ; } \u7f16\u8f91\u4fe1\u606f \u672c\u9875\u8d21\u732e\u8005\uff1a \u9c81\u660e\u7ff0 \u9875\u9762\u6700\u540e\u66f4\u65b0\u65f6\u95f4 : 2019/12/21","title":"\u5feb\u901f\u6392\u5e8f"},{"location":"Base/sort/\u5feb\u901f\u6392\u5e8f/#1","text":"\u5c06\u4e00\u4e2a\u4e71\u5e8f\u6570\u7ec4\u6309\u5347\u5e8f\u6392\u5e8f","title":"1. \u4efb\u52a1"},{"location":"Base/sort/\u5feb\u901f\u6392\u5e8f/#2","text":"void quick_sort(int q[], int l, int r) \u65f6\u95f4\u590d\u6742\u5ea6\uff1a O( N \\log N) O( N \\log N) q[] ....\u8981\u6392\u5e8f\u7684\u6570\u7ec4 l ......\u6392\u5e8f\u7684\u5de6\u533a\u95f4\u7aef\u70b9 r ......\u6392\u5e8f\u7684\u53f3\u533a\u95f4\u7aef\u70b9","title":"2. \u63a5\u53e3"},{"location":"Base/sort/\u5feb\u901f\u6392\u5e8f/#3","text":"1 2 3 4 5 6 7 8 9 10 11 void quick_sort ( int q [], int l , int r ) { if ( l >= r ) return ; int x = q [ l + r >> 1 ], i = l - 1 , j = r + 1 ; while ( i < j ){ while ( q [ ++ i ] < x ); while ( q [ -- j ] > x ); if ( i < j ) swap ( q [ i ], q [ j ]); } quick_sort ( q , l , j ); quick_sort ( q , j + 1 , r ); }","title":"3. \u4ee3\u7801"},{"location":"Base/sort/\u5feb\u901f\u6392\u5e8f/#4","text":"AcWing 785. \u5feb\u901f\u6392\u5e8f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #include <bits/stdc++.h> using namespace std ; const int N = 100000 ; int q [ N ]; void quick_sort ( int q [], int l , int r ) { if ( l >= r ) return ; int x = q [ l + r >> 1 ], i = l - 1 , j = r + 1 ; while ( i < j ){ while ( q [ ++ i ] < x ); while ( q [ -- j ] > x ); if ( i < j ) swap ( q [ i ], q [ j ]); } quick_sort ( q , l , j ); quick_sort ( q , j + 1 , r ); } int main () { int n ; scanf ( \"%d\" , & n ); for ( int i = 0 ; i < n ; i ++ ) scanf ( \"%d\" , & q [ i ]); quick_sort ( q , 0 , n - 1 ); for ( int i = 0 ; i < n ; i ++ ) printf ( \"%d \" , q [ i ]); return 0 ; } \u7f16\u8f91\u4fe1\u606f \u672c\u9875\u8d21\u732e\u8005\uff1a \u9c81\u660e\u7ff0 \u9875\u9762\u6700\u540e\u66f4\u65b0\u65f6\u95f4 : 2019/12/21","title":"4. \u4f7f\u7528\u8303\u4f8b"},{"location":"DP/","text":"","title":"\u52a8\u6001\u89c4\u5212\u90e8\u5206\u7b80\u4ecb"},{"location":"DP/\u533a\u95f4DP/","text":"","title":"\u533a\u95f4 DP"},{"location":"DP/\u6811\u5f62DP/","text":"","title":"\u6811\u5f62 DP"},{"location":"DP/\u80cc\u5305DP/","text":"","title":"\u80cc\u5305 DP"},{"location":"Data_Structure/","text":"","title":"\u6570\u636e\u7ed3\u6784\u90e8\u5206\u7b80\u4ecb"},{"location":"Data_Structure/\u6811\u72b6\u6570\u7ec4/","text":"","title":"\u6811\u72b6\u6570\u7ec4"},{"location":"Data_Structure/\u7ebf\u6bb5\u6811/","text":"","title":"\u7ebf\u6bb5\u6811"},{"location":"Geometry/","text":"","title":"\u8ba1\u7b97\u51e0\u4f55\u90e8\u5206\u7b80\u4ecb"},{"location":"Graph/","text":"","title":"\u56fe\u8bba\u90e8\u5206\u7b80\u4ecb"},{"location":"Graph/\u62d3\u6251\u6392\u5e8f/","text":"","title":"\u62d3\u6251\u6392\u5e8f"},{"location":"Graph/\u6700\u5c0f\u751f\u6210\u6811/","text":"","title":"\u6700\u5c0f\u751f\u6210\u6811"},{"location":"Math/","text":"","title":"\u6570\u8bba\u90e8\u5206\u7b80\u4ecb"},{"location":"Others/","text":"","title":"\u5176\u4ed6\u90e8\u5206\u7b80\u4ecb"},{"location":"Search/","text":"","title":"\u641c\u7d22\u90e8\u5206\u7b80\u4ecb"},{"location":"Search/BFS/","text":"","title":"BFS"},{"location":"Search/DFS/","text":"","title":"DFS"},{"location":"String/","text":"","title":"\u5b57\u7b26\u4e32\u90e8\u5206\u7b80\u4ecb"}]}