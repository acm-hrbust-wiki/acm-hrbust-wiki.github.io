{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230 Hrbust_ACM\u2018s Wiki\uff01 \u00b6 Let\u2019s Go !!! \u00b6 \u65bd\u5de5\u8fdb\u5ea6 \u00b6 [##-----------------------------------------------------------------------------------------------] 2%","title":"Getting Started"},{"location":"#hrbust_acms-wiki","text":"","title":"\u6b22\u8fce\u6765\u5230 Hrbust_ACM\u2018s Wiki\uff01"},{"location":"#lets-go","text":"","title":"Let\u2019s Go !!!"},{"location":"#_1","text":"[##-----------------------------------------------------------------------------------------------] 2%","title":"\u65bd\u5de5\u8fdb\u5ea6"},{"location":"home/","text":"\u4e00\uff1a\u5173\u4e8e\u672c\u7ad9 \u00b6 Info \u535a\u5ba2\u6846\u67b6 : MkDocs \u4e3b\u9898 : Material for MkDocs \u7f16\u5199\u6587\u672c \uff1amarkdown \u4e8c\uff1a\u7f16\u5199\u8bf4\u660e \u00b6 \u63a8\u8350\u4f7f\u7528 Typora \u6765\u7f16\u5199markdown\u6587\u4ef6 \u535a\u5ba2\u67b6\u6784\u652f\u6301 LaTeX \u6570\u5b66\u516c\u5f0f\u548cmarkdown\u6269\u5c55 \u4f8b\u5982\u4f60\u6240\u89c1\u5230\u7684 f_{i,j,k} f_{i,j,k} , f(i,j,k) f(i,j,k) \\varnothing \\varnothing \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u4e0e\u590d\u5236 C++ 1 2 3 4 5 6 7 8 9 10 11 12 #include <bits/stdc++.h> using namespace std ; int main () { vector < int > v ; for ( int i = 1 ; i <= 10 ; i ++ ) v . push_back ( i ); for ( auto x : v ) cout << x << \" \" ; printf ( \"Hello World \\n \" ); return 0 ; } python 1 2 3 4 5 6 def blogs_with_type ( request , blog_type_pk ): context = {} blog_type = get_object_or_404 ( BlogType , pk = blog_type_pk ) context [ 'blogs' ] = Blog . objects . filter ( blog_type = blog_type ) context [ 'blog_type' ] = blog_type return render ( request , 'blogs_with_type.html' , context ) \u4e09\uff1a\u52a0\u5165\u6211\u4eec \u00b6 \u8bf7\u8054\u7cfb\u5218\u660e\u8f89\u5b66\u957f","title":"\u4f7f\u7528\u4ecb\u7ecd"},{"location":"home/#_1","text":"Info \u535a\u5ba2\u6846\u67b6 : MkDocs \u4e3b\u9898 : Material for MkDocs \u7f16\u5199\u6587\u672c \uff1amarkdown","title":"\u4e00\uff1a\u5173\u4e8e\u672c\u7ad9"},{"location":"home/#_2","text":"\u63a8\u8350\u4f7f\u7528 Typora \u6765\u7f16\u5199markdown\u6587\u4ef6 \u535a\u5ba2\u67b6\u6784\u652f\u6301 LaTeX \u6570\u5b66\u516c\u5f0f\u548cmarkdown\u6269\u5c55 \u4f8b\u5982\u4f60\u6240\u89c1\u5230\u7684 f_{i,j,k} f_{i,j,k} , f(i,j,k) f(i,j,k) \\varnothing \\varnothing \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u4e0e\u590d\u5236 C++ 1 2 3 4 5 6 7 8 9 10 11 12 #include <bits/stdc++.h> using namespace std ; int main () { vector < int > v ; for ( int i = 1 ; i <= 10 ; i ++ ) v . push_back ( i ); for ( auto x : v ) cout << x << \" \" ; printf ( \"Hello World \\n \" ); return 0 ; } python 1 2 3 4 5 6 def blogs_with_type ( request , blog_type_pk ): context = {} blog_type = get_object_or_404 ( BlogType , pk = blog_type_pk ) context [ 'blogs' ] = Blog . objects . filter ( blog_type = blog_type ) context [ 'blog_type' ] = blog_type return render ( request , 'blogs_with_type.html' , context )","title":"\u4e8c\uff1a\u7f16\u5199\u8bf4\u660e"},{"location":"home/#_3","text":"\u8bf7\u8054\u7cfb\u5218\u660e\u8f89\u5b66\u957f","title":"\u4e09\uff1a\u52a0\u5165\u6211\u4eec"},{"location":"Base/","text":"","title":"\u7b97\u6cd5\u57fa\u7840\u7b80\u4ecb"},{"location":"Base/\u679a\u4e3e/","text":"","title":"\u679a\u4e3e"},{"location":"Base/\u8d2a\u5fc3/","text":"","title":"\u8d2a\u5fc3"},{"location":"DP/","text":"","title":"\u52a8\u6001\u89c4\u5212\u90e8\u5206\u7b80\u4ecb"},{"location":"DP/\u533a\u95f4DP/","text":"","title":"\u533a\u95f4 DP"},{"location":"DP/\u6811\u5f62DP/","text":"","title":"\u6811\u5f62 DP"},{"location":"DP/\u80cc\u5305DP/","text":"","title":"\u80cc\u5305 DP"},{"location":"Data_Structure/","text":"","title":"\u6570\u636e\u7ed3\u6784\u90e8\u5206\u7b80\u4ecb"},{"location":"Data_Structure/\u6811\u72b6\u6570\u7ec4/","text":"","title":"\u6811\u72b6\u6570\u7ec4"},{"location":"Data_Structure/\u7ebf\u6bb5\u6811/","text":"","title":"\u7ebf\u6bb5\u6811"},{"location":"Geometry/","text":"","title":"\u8ba1\u7b97\u51e0\u4f55\u90e8\u5206\u7b80\u4ecb"},{"location":"Graph/","text":"","title":"\u56fe\u8bba\u90e8\u5206\u7b80\u4ecb"},{"location":"Graph/\u62d3\u6251\u6392\u5e8f/","text":"","title":"\u62d3\u6251\u6392\u5e8f"},{"location":"Graph/\u6700\u5c0f\u751f\u6210\u6811/","text":"","title":"\u6700\u5c0f\u751f\u6210\u6811"},{"location":"Math/","text":"","title":"\u6570\u8bba\u90e8\u5206\u7b80\u4ecb"},{"location":"Others/","text":"","title":"\u5176\u4ed6\u90e8\u5206\u7b80\u4ecb"},{"location":"Search/","text":"","title":"\u641c\u7d22\u90e8\u5206\u7b80\u4ecb"},{"location":"Search/BFS/","text":"","title":"BFS"},{"location":"Search/DFS/","text":"","title":"DFS"},{"location":"String/","text":"","title":"\u5b57\u7b26\u4e32\u90e8\u5206\u7b80\u4ecb"}]}